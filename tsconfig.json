{
  "compilerOptions": {
    // 目标代码（ts => js(es5/6/7)）
    "target": "esnext",
    // 目标代码需要使用的模块化方案（commonjs ESmodule）
    "module": "esnext",
    // 严格检查（any）
    "strict": true,
    // 对 jsx 进行怎么样的处理
    "jsx": "preserve",
    // 辅助导入
    "importHelpers": true,
    // 按照 node 的方式去解析模块 import "/index.node"
    "moduleResolution": "node",
    // 跳过一些库的类型检测（axios -> 类型 / lodash -> @types/lodash / 其他第三方）
    "skipLibCheck": true,
    // export default / module.exports = {}  即esmodule 和 commonjs混合使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    // 指定具体要解析使用的类型
    "sourceMap": true,
    // 文件路径在解析时，基本url
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": ["webpack-env"],
    // 路径解析
    "paths": {
      "@/*": ["src/*"]
    },
    // 可以指定在项目中可以使用哪些库的类型（Proxy/Window/Document）
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
